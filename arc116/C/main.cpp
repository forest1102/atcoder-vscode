#include <atcoder/all>
#include <bits/stdc++.h>
using namespace std;
#define FOR(i, l, r) for(unsigned long long i = (l); i < (r); ++i)
#define rep(i, n) for(int i = 0; i < (int)(n); i++)
#define rrep(i, n) for(int i = (n)-1; i >= 0; --i)
#define rfor(v, vec) for(auto &v : (vec))
#define itrloop(itr, begin, end) for(auto itr = (begin); itr != end; ++itr)
#define crfor(v, vec) for(const auto &v : (vec))
#define all(x) x.begin(), x.end()
#define call(x) x.cbegin(), x.cend()
#define rall(x) x.rbegin(), x.rend()
#define ull unsigned long long
#define ll long long
#define ul unsigned long

const long long MOD = 998244353;
using mint = atcoder::modint998244353;

// Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips:
// You use the default template now. You can remove this line by using your
// custom template)
int main() {
    unsigned long long N;
    scanf("%lld", &N);
    unsigned long long M;
    scanf("%lld", &M);

    vector< mint > coef(40);
    coef[0] = 0;
    FOR(e, 1, coef.size()) {
        coef[e] = N + e - 1;
        coef[e] /= e;
    }

    vector< mint > dp(M + 1, 1);
    vector< bool > is_prime(M + 1, true);
    dp[0] = 0;
    mint ans = 1;
    FOR(i, 2, M + 1) {
        if(is_prime[i]) {
            ull e = 1;
            ull p = i;
            while(p <= M) {

                for(ull j = p; j <= M; j += p) {
                    dp[j] = dp[j] * coef[e];
                    is_prime[j] = false;
                }
                p *= i;
                ++e;
            }
        }
        ans += dp[i];
    }
    cout << ans.val() << endl;
    return 0;
}
